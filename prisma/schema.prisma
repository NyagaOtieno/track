generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User roles
enum Role {
  ADMIN
  DRIVER
  ASSISTANT
  PARENT
}

// Manifest status
enum ManifestStatus {
  CHECKED_IN
  CHECKED_OUT
}

// ====================== SCHOOL ======================
model School {
  id       Int      @id @default(autoincrement())
  name     String
  logoUrl  String?   // optional logo for frontend display
  address  String?
  phone    String?

  // Relations
  users    User[]
  buses    Bus[]
  students Student[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ====================== USER ======================
model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String? @unique
  phone    String? @unique
  password String
  role     Role

  schoolId Int
  school   School @relation(fields: [schoolId], references: [id])

  // Driver/Assistant relations
  busesDriven        Bus[]      @relation("DriverBus")
  busesAssisting     Bus[]      @relation("AssistantBus")
  assistantManifests Manifest[] @relation("AssistantManifest")

  // Parent â†’ Student relation
  students Student[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ====================== BUS ======================
model Bus {
  id          Int    @id @default(autoincrement())
  name        String
  plateNumber String @unique
  capacity    Int
  route       String

  schoolId Int
  school   School @relation(fields: [schoolId], references: [id])

  driverId Int?
  driver   User? @relation("DriverBus", fields: [driverId], references: [id])

  assistantId Int?
  assistant   User? @relation("AssistantBus", fields: [assistantId], references: [id])

  students  Student[]
  manifests Manifest[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ====================== STUDENT ======================
model Student {
  id        Int    @id @default(autoincrement())
  name      String
  grade     String
  latitude  Float
  longitude Float

  schoolId Int
  school   School @relation(fields: [schoolId], references: [id])

  busId   Int
  bus     Bus     @relation(fields: [busId], references: [id])

  parentId Int
  parent   User   @relation(fields: [parentId], references: [id])

  manifests Manifest[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ====================== MANIFEST ======================
model Manifest {
  id          Int             @id @default(autoincrement())
  studentId   Int
  busId       Int
  assistantId Int?
  status      ManifestStatus
  date        DateTime @default(now())
  latitude    Float?
  longitude   Float?

  student   Student @relation(fields: [studentId], references: [id])
  bus       Bus     @relation(fields: [busId], references: [id])
  assistant User?   @relation("AssistantManifest", fields: [assistantId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
